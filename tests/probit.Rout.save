
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(Zelig)
Loading required package: MASS
Loading required package: iterators
Loading required package: survival
Loading required package: splines

   ZELIG (Versions 4.0-0, built: 2010-09-28)
+----------------------------------------------------------------+
+  Please refer to http://gking.harvard.edu/zelig for full       +
+  documentation or help.zelig() for help with commands and      +
+  models support by Zelig.                                      +
+                                                                +
+  Zelig project citations:                                      +
+    Kosuke Imai, Gary King, and Olivia Lau.  (2009).            +
+    ``Zelig: Everyone's Statistical Software,''                 +
+    http://gking.harvard.edu/zelig                              +
+   and                                                          +
+    Kosuke Imai, Gary King, and Olivia Lau. (2008).             +
+    ``Toward A Common Framework for Statistical Analysis        +
+    and Development,'' Journal of Computational and             +
+    Graphical Statistics, Vol. 17, No. 4 (December)             +
+    pp. 892-913.                                                +
+                                                                +
+   To cite individual Zelig models, please use the citation     +
+   format printed with each model run and in the documentation. +
+----------------------------------------------------------------+

> 
> ##  Attaching the sample turnout dataset:
> data(turnout)
> 
> #####  Example 1:  Simple Example 
> 
> ##  Generating empirical estimates:
> 
> z.out1 <- zelig(vote ~ race + educate, model = "probit", data = turnout)
How to cite this model in Zelig:
Kosuke Imai, Gary King, and Olivia Lau. 2007. "probit: Probit Regression for Dichotomous Dependent Variables" in Kosuke Imai, Gary King, and Olivia Lau, "Zelig: Everyone's Statistical Software,"http://gking.harvard.edu/zelig

> ##  Viewing the regression output:
> 
> summary(z.out1)

Call:
glm(formula = vote ~ race + educate, family = binomial(link = "probit"), 
    model = F)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.2586  -0.8982   0.6712   0.7232   1.7045  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)    
(Intercept) -0.725949   0.128635  -5.643 1.67e-08 ***
racewhite    0.299076   0.084648   3.533 0.000411 ***
educate      0.097119   0.009571  10.147  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 2266.7  on 1999  degrees of freedom
Residual deviance: 2136.0  on 1997  degrees of freedom
AIC: 2142

Number of Fisher Scoring iterations: 4

> 
> ##  Using setx to generate baseline and alternative velus for the
> ##  explanatory variables.  
> 
> x.out1 <- setx(z.out1)
> x.out1

model name: probit      
formula:    vote ~ race + educate
cond:       No
results of fn:
  race    = white
  educate = 12.06675

> 
> 
> ##  Simulating quantities of interest (predicted probabilites, risk
> ##  ratios, and risk differences):
> 
> s.out1 <- sim(z.out1, x = x.out1)
> 
> ## Summarizing the simulated quantities of interest:
> 
> ## Diagnostic plot of the s.out:
> 
> plot(s.out1)
> 
> ##  Example 2: First Differences
> 
> 
> x.low <- setx(z.out1, educate = quantile(turnout$educate, prob = 0.75))
> x.high <- setx(z.out1, educate = quantile(turnout$educate, prob = 0.25))
> x.low

model name: probit      
formula:    vote ~ race + educate
cond:       No
results of fn:
  race    = white
  educate = 14

> x.high

model name: probit      
formula:    vote ~ race + educate
cond:       No
results of fn:
  race    = white
  educate = 10

> 
> s.out2 <- sim(z.out1, x = x.low, x1 = x.high)
> 
> 
> plot(s.out2)
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
